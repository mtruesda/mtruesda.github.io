name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: â¬¢ Setup Node (cache for both subprojects)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          # Tell the cache where your lockfiles live
          cache-dependency-path: |
            Server/package-lock.json
            Website/package-lock.json

      # ---- Install deps ----
      - name: Install Server deps
        working-directory: Server
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      - name: Install Website deps
        working-directory: Website
        run: |
          if [ -f package-lock.json ]; then npm ci; else npm i; fi

      # ---- Start API in background (optional: only if Website build/tests need it) ----
      - name: Start API (background)
        working-directory: Server
        run: |
          node index.js &
          echo $! > ../api.pid
          sleep 2

      # ---- Build website (use a finite command, not npm start) ----
      - name: Build website
        working-directory: Website
        run: |
          if npm run | grep -q " build"; then
            npm run build
          else
            echo 'Add a "build" script to Website/package.json (e.g., "vite build" or "react-scripts build")' >&2
            exit 1
          fi

      # ---- Stop API even on failure ----
      - name: Stop API
        if: always()
        run: |
          if [ -f api.pid ]; then
            kill "$(cat api.pid)" || true
            rm -f api.pid
          fi
